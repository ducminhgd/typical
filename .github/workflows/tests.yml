name: Test

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Display Python version
      run: python -c "import sys; print(f'Python {sys.version} on {sys.platform}')"

    - name: Install Linux dependencies
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        ./.github/ubuntu-install.sh
    - name: Install macOS dependencies
      if: startsWith(matrix.os, 'macos')
      run: |
        ./.github/macos-install.sh

    - name: Install Poetry
      uses: dschep/install-poetry-action@v1.2

    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-poetry-${{ hashFiles('poetry.lock') }}

    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs

    - name: Install Dependencies
      run: poetry install --no-dev -E tests

    - name: Test with pytest
      run: "poetry run pytest tests typic --doctest-modules"
